package internals;

public class Knapsack {
static int max(int a,int b) {
	return (a>b)?a:b;
}
static int knapsack(int W, int wt[], int val[],int n){
	if(W ==0|| n==0) {
		return 0;
	}
	if(wt[n-1]>W) {
		return knapsack(W,wt,val,n-1);
	}
	else {
		return max(val[n-1]+knapsack(W-wt[n-1],wt,val,n-1),knapsack(W,wt,val,n-1));
	}
}
public static void main(String[]args) {
int profit[]= new int[] { 6,10,12,8,15};
int weight[]= new int [] {1,2,3,1,2};
int W= 5;
int n = profit.length;
System.out.println(knapsack(W,weight,profit,n));
}
}
o/p=33