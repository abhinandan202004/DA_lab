package internals;

import java.util.*;

public class TSP {
static int n=3;
static int max=Integer.MAX_VALUE;
static int [][]dist= {
		{0,10,15},
		{10,0,20},
		{15,20,0}
};
static int [][]dp;
static boolean []visited;
static int tsp(int pos, int count) {
	if(count==n) {
		return dist[pos][0];
	}
	if(dp[pos][count]!=-1) {
		return dp[pos][count];
	}
	int minCost=max;
	for(int city=0;city<n;city++) {
		if(!visited[city]) {
			visited[city]=true;
			int newCost=dist[pos][city]+tsp(city,count+1);
			minCost=Math.min(minCost, newCost);
			visited[city]=false;
		}
	}
	dp[pos][count]=minCost;
	return minCost;
}
public static void main(String[]args) {
	dp=new int[n][n+1];
	for(int[] row:dp) {
		Arrays.fill(row, -1);
	}
	visited=new boolean[n];
	visited[0]=true;
	int ans=tsp(0,1);
	  System.out.println("The cost of the most efficient tour = " + ans);//45
}
}
